name: Build and Push API Server

on:
  push:
    branches: [main, deploy]
    paths:
      - 'src/**'
      - 'build.gradle'
      - 'Dockerfile'
      - '.github/workflows/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      # Secrets에서 application-secrets.yml 파일 생성
      - name: Create application-secrets.yml
        run: |
          mkdir -p src/main/resources
          echo '${{ secrets.SECRETS }}' > src/main/resources/application-secrets.yml

      - name: Run tests
        run: ./gradlew test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
  trigger-deployment:
   needs: build-and-push
   runs-on: ubuntu-latest
   
   steps:
     - name: Extract single image tag
       id: image-info
       run: |
         FIRST_TAG=$(echo '${{ needs.build-and-push.outputs.image-tag }}' | head -1)
         echo "tag=${FIRST_TAG}" >> $GITHUB_OUTPUT
         
     - name: Trigger deployment
       uses: peter-evans/repository-dispatch@v3
       with:
         token: ${{ secrets.DEPLOYMENT_TOKEN }}
         repository: StockOne19/deploy
         event-type: api-server-updated
         client-payload: |
           {
             "service": "api-server",
             "image_tag": "${{ steps.image-info.outputs.tag }}",
             "commit_sha": "${{ github.sha }}"
           }
