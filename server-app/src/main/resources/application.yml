spring:
  application:
    name: backend
  profiles:
    active: prod
    include: secrets
  datasource:
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5 
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 120000
      validation-timeout: 5000
  data:
    mongodb:
      uri: ${mongodb.uri}
    redis:
      host: ${redis.host}
      port: ${redis.port}
      password: ${redis.password:}
      timeout: 2000ms
  jpa:
    properties:
      hibernate:
        format-sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          batch-size: 25
        order-inserts: true
        order-updates: true
        batch-versioned-data: true
        connection:
          provider-disables-autocommit: false
        type:
          sql-trace: true
    show-sql: true
  cache:
    type: redis
    redis:
      time-to-live: 3600000
      cache-null-values: false

server:
  port: 8081

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized

# AI 프롬프트 설정
ai:
  prompts:
    backtest-report:
      template-file: "classpath:templates/backtest-report-prompt.md"
    portfolio-optimization:
      template-file: "classpath:templates/portfolio-optimization-prompt.md"

# JWT 설정
jwt:
  secret: ${JWT_SECRET:mySecretKey}
  expiration: 259200000

logging:
  level:
    com:
      stockone19: INFO
    org:
      hibernate:
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
        SQL: DEBUG
      springframework:
        web: WARN
        jdbc: WARN
        cache: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    